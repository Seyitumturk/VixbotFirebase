<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.16/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="/templates.css">

</head>


<body class="custom-body">
    <div class="wrapper">

        <div id="bigSidebar"
            class="flex flex-col items-center w-64 h-full overflow-hidden text-black-400 bg-white-900 box ">

            <div class="sidebar-logo">
                <img class="logo-image" src="/img/brand/vb.svg" alt="logo" />
            </div>

            <a class="flex items-center w-full h-12 px-3 mt-2  mt-20 karita" href="/conversations">

                <span class="ml-5 mt-5 text-xl font-medium ">Karita</span>
            </a>


            <a class="flex items-center w-full h-12 px-3 mt-2  hover:bg-gray-700 hover:text-gray-300 mt-20"
                href="/conversations">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor"
                    stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-lightbulb">
                    <path
                        d="M13 17H11M6.38 18A7.95 7.95 0 0 0 12 20C15.866 20 19 16.866 19 13A7.95 7.95 0 0 0 19.74 11H4.67A7.95 7.95 0 0 0 5 13C5 15.7614 7.23858 18 10 18Z">
                    </path>
                    <line x1="12" y1="2" x2="12" y2="6"></line>
                    <line x1="18" y1="12" x2="22" y2="12"></line>
                    <line x1="6" y1="12" x2="2" y2="12"></line>
                </svg>
                <span class="ml-2 text-sm font-medium">Ideate</span>
            </a>
            <!-- ... -->
            <!-- Products link -->
            <a class="flex items-center w-full h-12 px-3 mt-2  hover:bg-gray-700 hover:text-gray-300" href="/products">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor"
                    stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-box">
                    <path
                        d="M21 13V21C21 21.5304 20.7893 22.0391 20.4142 22.4142C20.0391 22.7893 19.5304 23 19 23H5C4.46957 23 3.96086 22.7893 3.58579 22.4142C3.21071 22.0391 3 21.5304 3 21V13">
                    </path>
                    <polyline points="3 12 12 7 21 12"></polyline>
                    <path d="M12 22V7"></path>
                    <path d="M2 6L22 6"></path>
                </svg>
                <span class="ml-2 text-sm font-medium">Products</span>
            </a>
            <!-- Templates link -->
            <a class="flex items-center w-full h-12 px-3 mt-2  hover:bg-gray-700 hover:text-gray-300" href="/templates">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor"
                    stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-layers">
                    <polygon points="12 2 2 7 12 12 22 7 12 2"></polygon>
                    <polyline points="2 17 12 22 22 17"></polyline>
                    <polyline points="2 12 12 17 22 12"></polyline>
                </svg>
                <span class="ml-2 text-sm font-medium">Templates</span>
            </a>
            <a class="flex items-center w-full h-12 px-3 mt-2  hover:bg-gray-700 hover:text-gray-300"
                href="/conversations">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor"
                    stroke-width="2">
                    <path
                        d="M17 21v-2c0-1.1-.4-2.1-1.2-2.9-.7-.8-1.7-1.2-2.8-1.2h-2c-1.1 0-2.1.4-2.9 1.2-.8.7-1.2 1.7-1.2 2.8v2">
                    </path>
                    <circle cx="9" cy="7" r="4"></circle>
                    <path
                        d="M23 21v-2c0-1.1-.4-2.1-1.2-2.9-.7-.8-1.7-1.2-2.8-1.2-1.1 0-2.1.4-2.9 1.2-.8.7-1.2 1.7-1.2 2.8v2">
                    </path>
                    <circle cx="19" cy="7" r="4"></circle>
                </svg>
                <span class="ml-2 text-sm font-medium">Collaborate</span>
                <span class="ml-1 px-1 py-1 text-sm font-medium text-white bg-blue-600 ml-10 rounded">NEW</span>
            </a>

        </div>
        <div class="main-content">


            <!-- Header -->
            <div class="row">
                <div class="col">
                    <div class="card shadow">
                        <div class="card-header bg-transparent d-flex justify-content-between align-items-center">
                            <h1 class="mb-0" style=" font-size: 2em;">Templates</h1>
                            <button id="add-product-btn" class="btn btn-primary">+</button>
                        </div>
                    </div>
                </div>
            </div>



            <!-- Template creation form-->
            <div class="modal fade" id="create-template-modal" tabindex="-1" role="dialog"
                aria-labelledby="create-template-modal-label" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="create-template-modal-label">Create a New Template</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form id="create-template-form" method="POST" action="/create-template">
                                <div class="form-group" id="template-name-group">
                                    <label for="template-name">Template Name:</label>
                                    <input type="text" id="template-name" name="template_name" class="form-control"
                                        required>
                                </div>
                                <div class="form-group" id="template-context-group">
                                    <label for="template-context">Template Context:</label>
                                    <input type="text" id="template-context" name="template_context"
                                        class="form-control" required>
                                </div>
                                <div class="form-group" id="template-functionality-group">
                                    <label for="template-functionality">Template Functionality:</label>
                                    <input type="text" id="template-functionality" name="template_functionality"
                                        class="form-control" required>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" id="submit-template-btn">Submit</button>
                        </div>
                    </div>
                </div>
            </div>

            <div id="templates-section" class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3 p-6">
                <!-- Templates will be dynamically inserted here -->
            </div>




            <script>
                document.addEventListener('DOMContentLoaded', (event) => {
                    const form = document.getElementById('create-template-form');
                    const submitBtn = document.getElementById('submit-template-btn');

                    form.addEventListener('submit', async (e) => {
                        console.log('Form submitted');

                        e.preventDefault();

                        const templateName = document.getElementById('template-name').value;
                        const templateContext = document.getElementById('template-context').value;
                        const templateFunctionality = document.getElementById('template-functionality').value;

                        const templateData = {
                            template_name: templateName,
                            template_context: templateContext,
                            template_functionality: templateFunctionality
                        };

                        const response = await fetch('/templates', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(templateData),
                        });

                        if (response.ok) {
                            const responseData = await response.json();
                            console.log('Template created successfully:', responseData);
                            // You can update the UI or redirect the user here
                        } else {
                            console.error('Error while sending request:', response.status, response.statusText);
                        }
                    });

                    submitBtn.addEventListener('click', (e) => {
                        form.dispatchEvent(new Event('submit'));
                    });
                });
            </script>

            <script>
                async function loadTemplates() {
                    const response = await fetch('/templates');
                    const templates = await response.json();

                    const templateSection = document.getElementById('templates-section');

                    for (const template of templates) {
                        const card = document.createElement('div');
                        card.className = 'neumorphic';

                        const name = document.createElement('h2');
                        name.textContent = template.template_name;
                        card.appendChild(name);

                        const context = document.createElement('p');
                        context.textContent = template.template_context;
                        card.appendChild(context);

                        const functionality = document.createElement('p');
                        functionality.textContent = template.template_functionality;
                        card.appendChild(functionality);

                        templateSection.appendChild(card);
                    }
                }

                loadTemplates();

            </script>


        </div>
</body>